<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<project basedir="." default="create_dirs" name="OpenJML">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="${eclipse.home}"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>	
	
	<dirname
	    property="OpenJML.basedir"
	    file="${ant.file.OpenJML}"
	/>	
	

	<!-- Get pde.build directory from eclipse home -->
	<first id="PDE_BUILD_DIR">
	    <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.pde.build_*/" />
	</first>
	
	
	<!-- Get launcher jar -->
	<first id="LAUNCHER">
		    <fileset dir="${ECLIPSE_HOME}" includes="plugins/org.eclipse.equinox.launcher_*.jar" />
    </first>
	
	
	
    <target name="clean">
        <delete dir="buildDirectory"/> 
    	<delete dir="features"/> 
    	<delete dir="plugins"/> 
    </target>
	
	<target name="clean_tempDir">
	        <delete dir="buildDirectory"/>        
	</target>
	
		
	<target name="update_build_id" depends="clean" >
        <propertyfile
            file="../OpenJMLFeature/build.properties" comment="Build version info">
            <entry key="buildId" default="0.0.0" type="int" operation="+" value="1" />
        </propertyfile>
        <replace
            file="../OpenJMLFeature/feature.xml"
            value="value not found in version.properties"
            propertyFile="../OpenJMLFeature/build.properties">
            <replacefilter
                token="@buildId@"
                property="buildId"/>
        </replace>
		
    </target>	
	
	<target depends="update_build_id" name="update_versions" >
		<property file="${OpenJML.basedir}/../OpenJMLFeature/build.properties"/>
		<replaceregexp file="${OpenJML.basedir}/../OpenJMLFeature/feature.xml"
		               match="version=&quot;(\d)\.(\d)\.(\d+)&quot;"
		               replace="version=&quot;\1\.\2\.${buildId}&quot;"
		               byline="true"
	    />
		<replaceregexp file="${OpenJML.basedir}/../JMLAnnotations/META-INF/MANIFEST.MF"
		               match="Bundle-Version: (\d)\.(\d)\.(\d+)"
		               replace="Bundle-Version: \1\.\2\.${buildId}"
		               byline="true"
	  	/>
		<replaceregexp file="${OpenJML.basedir}/../OpenJMLUI/META-INF/MANIFEST.MF"
		               match="Bundle-Version: (\d)\.(\d)\.(\d+)"
		               replace="Bundle-Version: \1\.\2\.${buildId}"
		               byline="true"
	    />
		<replaceregexp file="${OpenJML.basedir}/../Specs/META-INF/MANIFEST.MF"
		               match="Bundle-Version: (\d)\.(\d)\.(\d+)"
		               replace="Bundle-Version: \1\.\2\.${buildId}"
		               byline="true"
		/>
	    </target> 

    <target depends="update_versions" name="setup" description="Creates empty temp directories">
    	<mkdir dir="buildDirectory"/>
    	<mkdir dir="buildDirectory/features"/>
    	<mkdir dir="buildDirectory/plugins"/>
    	<mkdir dir="buildDirectory/features/org.jmlspecs.openjml.OpenJMLFeature"/>
    </target>

  	<target depends="setup" name="populate_data" description="copies required projects into build directory">
  		<copy includeemptydirs="true" todir="buildDirectory/features/org.jmlspecs.openjml.OpenJMLFeature">
	            <fileset dir="${OpenJML.basedir}/../OpenJMLFeature">  		                
	            </fileset>
  		</copy>
  		<copy includeemptydirs="true" todir="buildDirectory/plugins/JMLAnnotations">
	            <fileset dir="${OpenJML.basedir}/../JMLAnnotations">  		                
	            </fileset>
  		</copy>
  		<copy includeemptydirs="true" todir="buildDirectory/plugins/OpenJMLUI">
	            <fileset dir="${OpenJML.basedir}/../OpenJMLUI">  		                
	            </fileset>
  		</copy>
  		<copy includeemptydirs="true" todir="buildDirectory/plugins/Specs">
	            <fileset dir="${OpenJML.basedir}/../Specs">  		                
	            </fileset>
  		</copy>
  	</target>
	<target depends="populate_data" name="Create_Plugins" description="Executes pde build script and generates plugins and feature">
		<java jar="${toString:LAUNCHER}" failonerror="true" fork="yes">
			<arg line="-application org.eclipse.ant.core.antRunner -buildfile ${toString:PDE_BUILD_DIR}/../scripts/build.xml -DbuildDirectory=${OpenJML.basedir}/buildDirectory -DbaseLocation=${ECLIPSE_HOME} -Dbuilder=${OpenJML.basedir}/../OpenJMLFeature -DjavacSource=1.7 -DjavacTarget=1.7"/>
        </java>
    </target>
	
	<target name="create_dirs" depends="Create_Plugins" description="creates plugins and features dir and copies plugins and feature in respective directories">
		<property file="${OpenJML.basedir}/../OpenJMLFeature/build.properties"/>
        <unzip src="${OpenJML.basedir}/buildDirectory/build/org.jmlspecs.openjml.OpenJMLFeature-${buildId}.zip" 
        		dest ="${OpenJML.basedir}/buildDirectory" />
		<copy todir= "${OpenJML.basedir}/plugins">
			<fileset dir= "${OpenJML.basedir}/buildDirectory/tempBuild/plugins"/>
		</copy>
		<dirset id="dist.contents" dir="${OpenJML.basedir}/buildDirectory/tempBuild/features" includes="*"/>
		<property name="prop.dist.contents" refid="dist.contents"/>
		<zip destfile="${OpenJML.basedir}/features/${prop.dist.contents}.jar"
		       basedir="${OpenJML.basedir}/buildDirectory/tempBuild/features/${prop.dist.contents}"
		  />
	</target>
	
</project>
